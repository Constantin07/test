pipeline {

  agent {
    label 'built-in'
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    ansiColor('xterm')
  }

  environment {
    DIRECTORY = 'pipelines/builds/fuse-overlayfs'
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm: [$class: 'GitSCM',
          branches: [[name: 'main']],
          userRemoteConfigs: [[url: 'https://github.com/containers/fuse-overlayfs.git' ]],
          extensions: [
            [$class: 'CleanCheckout'],
            [$class: 'CloneOption', noTags: false, reference: '', shallow: false]
          ]
        ]
        script {
          latestTag = sh(script: 'git describe --tags `git rev-list --tags --max-count=1`', returnStdout: true).trim()
          println latestTag
          sh "git checkout ${latestTag}"
        }
      }
    }

    stage('Install dependencies') {
      steps {
        sh '''
          sudo yum install -y autoconf automake fuse3-devel
        '''
      }
    }

    stage('Build') {
      steps {
        sh '''
          ./autogen.sh
          ./configure --prefix=/usr/local
          make
        '''
      }
    }

    stage('Install') {
      steps {
        sh 'sudo make install'
        sh 'sudo ln -sf /usr/local/bin/fuse-overlayfs /bin/fuse-overlayfs'
      }
    }

    stage('Verify') {
      environment {
        PATH = "/usr/local/bin:${env.PATH}"
      }
      steps {
        sh 'fuse-overlayfs -V'
      }
    }

  }

  post {
    always {
      cleanWs()
    }
    success {
      script {
        currentBuild.description = latestTag
      }
    }
  }

}
