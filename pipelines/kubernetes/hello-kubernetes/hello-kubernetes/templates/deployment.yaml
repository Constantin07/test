apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hello-kubernetes.fullname" . }}
  labels: {{- include "hello-kubernetes.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/change-cause: {{ .Values.image.tag | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hello-kubernetes.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hello-kubernetes.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/vaultAgentConfigMap.yaml") . | sha256sum }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                      - {{ include "hello-kubernetes.name" . }}
              topologyKey: "kubernetes.io/hostname"
      serviceAccountName: {{ include "hello-kubernetes.fullname" . }}
      terminationGracePeriodSeconds: 80
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "60"]
          ports:
            - containerPort: {{ .Values.container.port }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: {{ .Values.container.port }}
              scheme: HTTP
            failureThreshold: 30
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.container.port }}
              scheme: HTTP
            failureThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.container.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- if .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
        {{- if .Values.vaultAgent.enabled }}
          {{- include "hello-kubernetes.vault" . | nindent 8 }}
      volumes:
        - name: vault-config
          configMap:
            name: {{ include "hello-kubernetes.fullname" . }}-vault-agent-config
        {{- end }}
