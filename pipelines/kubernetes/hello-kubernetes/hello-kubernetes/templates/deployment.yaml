apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hello-kubernetes.fullname" . }}
  labels: {{- include "hello-kubernetes.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/change-cause: {{ .Values.image.tag | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hello-kubernetes.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hello-kubernetes.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "hello-kubernetes.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.container.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.container.port }}
              scheme: HTTP
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /health
              port: {{ .Values.container.port }}
              scheme: HTTP
            failureThreshold: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.container.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.env }}
          env:
            {{- range $index, $element := .Values.env }}
            - name: {{ $index | quote }}
              value: {{ $element | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
        {{- if .Values.vaultAgent.enabled }}

        - name: vault-agent
          image: "{{ .Values.vaultAgent.image.repository }}:{{ .Values.vaultAgent.image.tag }}"
          imagePullPolicy: {{ .Values.vaultAgent.image.pullPolicy }}
          command: [ "vault" ]
          args:
            - "agent"
            - "-config=/etc/vault/config.hcl"
            - "-log-level=info"
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "nc -vz 127.0.0.1 8200"
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1
          {{- if .Values.vaultAgent.resources }}
          resources:
            {{- toYaml .Values.vaultAgent.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 100
            runAsGroup: 1000
            capabilities:
              add:
                - IPC_LOCK
          {{- if .Values.vaultAgent.env }}
          env:
            {{- range $index, $element := .Values.vaultAgent.env }}
            - name: {{ $index | quote }}
              value: {{ $element | quote }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: vault-config
              mountPath: /etc/vault/config.hcl
              subPath: config.hcl
              readOnly: true
      volumes:
        - name: vault-config
          configMap:
            name: {{ include "hello-kubernetes.fullname" . }}-vault-agent-config
        {{- end }}
