pipeline {

  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    ansiColor('xterm')
  }

  environment {
    KUBECONFIG = '/home/toolbox/.kube/config'
    DIRECTORY = 'pipelines/kubernetes/kube-hunter'
    REGISTRY = 'http://registry.internal:5000'
    DOCKER_IMAGE = 'registry.internal:5000/tool-box:latest'
    ARGS = '--mount type=bind,src=/var/lib/jenkins/.kube,dst=/home/toolbox/.kube,readonly'
  }

  stages {

    stage('Run kube-hunter as pod') {
      agent {
        docker {
          registryUrl env.REGISTRY
          image env.DOCKER_IMAGE
          alwaysPull true
          args env.ARGS
        }
      }
      steps {
        dir(env.DIRECTORY) {
          sh './kube-hunter.sh'
        }
      }
    }

    stage('Run kube-hunter remote') {
      steps {
        sh 'docker run -t --rm public.ecr.aws/aquasecurity/kube-hunter:latest --remote kube-cluster.internal'
      }
    }

  }

  post {
    always {
      cleanWs()
    }
  }

}
