kind: Deployment
apiVersion: apps/v1
metadata:
  name: dashboard-metrics-scraper
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: dashboard-metrics-scraper
    chart: {{ template "kubernetes-dashboard.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: dashboard-metrics-scraper
  template:
    metadata:
      labels:
        k8s-app: dashboard-metrics-scraper
      annotations:
        "seccomp.security.alpha.kubernetes.io/pod": 'runtime/default'
    spec:
      containers:
        - name: dashboard-metrics-scraper
          image: "{{ .Values.scraper.repository }}:{{ .Values.scraper.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
          args:
            - --metric-resolution=1m
            - --metric-duration=30m
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      serviceAccountName: dashboard-metrics-scraper
      nodeSelector:
        "kubernetes.io/os": linux
      volumes:
        - name: tmp-volume
          emptyDir: {}
