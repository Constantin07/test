def skipDelete = false

pipeline {

  agent none

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    ansiColor('xterm')
  }

  environment {
    KUBECONFIG = '/home/toolbox/.kube/config'
    DIRECTORY = 'pipelines/kubernetes/kubernetes-dashboard'
    REGISTRY = 'http://registry.internal:5000'
    DOCKER_IMAGE = 'registry.internal:5000/tool-box:latest'
    ARGS = '--mount type=bind,src=/var/lib/jenkins/.kube,dst=/home/toolbox/.kube,readonly'
  }

  stages {

    stage('Deploy dashboard') {
      agent {
        docker {
          registryUrl env.REGISTRY
          image env.DOCKER_IMAGE
          alwaysPull true
          args env.ARGS
        }
      }
      steps {
        lock('kubernetes/kubernetes-dashboard') {
          dir(env.DIRECTORY) {
            sh 'make validate lint apply'
          }
        }
        milestone(ordinal: 1)
      }
    }

    stage('Test dashboard') {
      agent {
        docker {
          registryUrl env.REGISTRY
          image env.DOCKER_IMAGE
          alwaysPull true
          args env.ARGS
        }
      }
      steps {
        dir(env.DIRECTORY) {
          sh './test.sh'
        }
        milestone(ordinal: 2)
      }
    }

    stage('Approve to delete') {
      options {
        timeout(time: 1, unit: 'HOURS')
      }
      steps {
        script {
          skipDelete = input(
            message: 'Should we skip delete?',
            ok: 'Yes',
            parameters: [booleanParam(name: 'SKIP_DELETE', defaultValue: true, description: 'Whether to skip delete stage.')]
          )
        }
        milestone(ordinal: 3)
      }
    }

    stage('Remove dashboard') {
      when {
        expression { skipDelete == false }
      }
      agent {
        docker {
          registryUrl env.REGISTRY
          image env.DOCKER_IMAGE
          alwaysPull true
          args env.ARGS
        }
      }
      steps {
        dir(env.DIRECTORY) {
          sh 'make destroy'
        }
        cleanWs()
        milestone(ordinal: 4)
      }
    }


  }

}
