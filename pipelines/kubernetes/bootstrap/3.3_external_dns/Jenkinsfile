pipeline {

  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    ansiColor('xterm')
  }

  environment {
    KUBECONFIG = '/home/toolbox/.kube/config'
    ROOT_DIR = 'pipelines/kubernetes/bootstrap/3.3_external_dns'
    REGISTRY = 'http://registry.internal:5000'
    DOCKER_IMAGE = 'registry.internal:5000/tool-box:latest'
    ARGS = '''
      -u toolbox \
      -t \
      --mount type=bind,src=/var/lib/jenkins/.kube,dst=/home/toolbox/.kube,readonly \
      --mount type=bind,src=/var/lib/jenkins/.gnupg,dst=/home/toolbox/.gnupg
    '''
  }

  stages {

    stage('Install external-dns') {
      agent {
        docker {
          registryUrl env.REGISTRY
          image env.DOCKER_IMAGE
          alwaysPull true
          args env.ARGS
        }
      }
      steps {
        dir(env.ROOT_DIR) {
          sh '''
            git crypt unlock
            make init lint apply
          '''
        }
      }
    }

   stage('Run tests') {
     agent {
       docker {
         image 'golang:1.20-alpine3.18'
         args '-t --mount type=bind,src=/var/lib/jenkins/.kube,dst=/go/.kube,readonly'
       }
     }
     environment {
       GOCACHE = "${WORKSPACE}"
       KUBECONFIG = '/go/.kube'
     }
     steps {
       dir(env.ROOT_DIR + '/test') {
         sh '''
           wget -c https://storage.googleapis.com/kubernetes-release/release/v1.27.3/bin/linux/amd64/kubectl
           chmod +x ./kubectl
           mv ./kubectl /usr/local/bin/
           go mod download
           go test -v -namespace default
         '''
       }
     }
   }

  }

  post {
    always {
      cleanWs()
    }
  }

}
