pipeline {

  agent {
    label 'master'
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    durabilityHint('PERFORMANCE_OPTIMIZED')
    ansiColor('xterm')
  }

  environment {
    DIRECTORY = 'ansible'
    PYTHONWARNINGS = 'ignore::UserWarning'
  }

  stages {

    stage('Configure Jenkins slaves') {
      agent {
        docker {
          label 'master'
          reuseNode true
          registryUrl 'http://centos7.internal:5000'
          image 'centos7.internal:5000/tool-box:latest'
          alwaysPull true
          args '-u toolbox --mount type=bind,src=/var/lib/jenkins/.gnupg,dst=/home/toolbox/.gnupg'
        }
      }
      steps {
        dir(env.DIRECTORY) {
          sh 'git crypt unlock'
          sshagent(credentials: ['jenkins-ssh-key']) {
            sh 'ansible jenkins_slaves -m yum -a "name=* state=latest update_cache=yes"'
            sh 'ansible-playbook jenkins_slaves.yaml'
          }
        }
      }
    }

  }

  post {
    always {
      cleanWs()
    }
  }

}
