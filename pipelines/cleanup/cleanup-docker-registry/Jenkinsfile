pipeline {

  agent {
    label 'built-in'
  }

  triggers {
    pollSCM('H/4 H(9-23) * * *')
    upstream(upstreamProjects:
      'dockerfiles/tool-box,' +
      'dockerfiles/vault,' +
      'kubernetes/hello-kubernetes/deploy,' +
      'deploy-docker-registry',
      threshold: hudson.model.Result.SUCCESS)
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    durabilityHint('PERFORMANCE_OPTIMIZED')
    ansiColor('xterm')
    skipDefaultCheckout()
  }

  environment {
    REGISTRY_HOST = 'registry.internal:5000'
  }

  stages {

    stage('List images') {
      steps {
        sh '''
          docker pull anoxis/registry-cli
          docker run --rm anoxis/registry-cli -r http://${REGISTRY_HOST}
        '''
      }
    }

    stage('Clean images') {
      steps {
        retry(2) {
          sh '''
            if [ "$(docker ps -aq -f status=running -f name=docker-registry)" ]; then
              docker run --rm --network host anoxis/registry-cli -r http://${REGISTRY_HOST} --delete --num 2 --order-by-date --digest-method=GET
              # Perform garbage collection
              docker exec docker-registry /bin/registry garbage-collect /etc/docker/registry/config.yml --delete-untagged=true
            fi
          '''
        }
      }
    }

    stage('Garbage collect old images') {
      steps {
        sh '''
          sudo systemctl stop docker-registry.service
          docker run --rm -v docker_registry:/var/lib/registry:rw constantin07/docker-registry:latest \
            /bin/registry garbage-collect --delete-untagged /etc/docker/registry/config.yml
          sudo systemctl start docker-registry.service
        '''
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
