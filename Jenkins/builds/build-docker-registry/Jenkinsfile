#!groovy

pipeline {

  agent any

  triggers {
    pollSCM('H H(9-18) * * *')
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    ansiColor('xterm')
  }

  environment {
    REGISTRY     = 'centos7.internal'
    IMAGE_NAME   = 'docker-registry'
    SERVICE_PORT = '5000'
  }

  stages {

    stage('Prepare') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: 'master']],
          userRemoteConfigs: [[credentialsId: 'Git', url: 'git@github.com:docker/distribution-library-image.git']],
          extensions: [
            [$class: 'CleanBeforeCheckout'],
            [$class: 'RelativeTargetDirectory', relativeTargetDir: 'tmp']
          ]
        ])

        echo('Overwrite default config files')
        sh('''
          cp -f Jenkins/builds/build-docker-registry/Dockerfile tmp/amd64/
          cp -f Jenkins/builds/build-docker-registry/config-example.yml tmp/amd64/
        ''')
      }
    }

    stage('Build image') {
      steps {
        dir('tmp/amd64') {
          sh('''
            GIT_URL=$(git config --get remote.origin.url)
            COMMIT=$(git rev-parse HEAD)
            docker build --pull --tag ${REGISTRY}:${SERVICE_PORT}/${IMAGE_NAME}:${BUILD_NUMBER} \
            --label IMAGE_NAME=${IMAGE_NAME} \
            --label BUILD_NUMBER=${BUILD_NUMBER} \
            --label COMMIT=${COMMIT} \
            --label GIT_URL=${GIT_URL} \
            .
          ''')
        }
      }
    }

    stage('Publish image') {
      steps {
        sh('''
          docker push ${REGISTRY}:${SERVICE_PORT}/${IMAGE_NAME}:${BUILD_NUMBER}
          docker tag ${REGISTRY}:${SERVICE_PORT}/${IMAGE_NAME}:${BUILD_NUMBER} ${REGISTRY}:${SERVICE_PORT}/${IMAGE_NAME}:latest
          docker push ${REGISTRY}:${SERVICE_PORT}/${IMAGE_NAME}:latest
        ''')
      }
    }

    stage('Deploy image') {
      steps {
        sh('''
          docker stop ${IMAGE_NAME} || true
          docker rm ${IMAGE_NAME} || true
          docker run -d \
            --name ${IMAGE_NAME} \
            -p 5000:5000 \
            -v /var/lib/registry:/var/lib/registry \
            --memory 256m \
            --cpus "0.5" \
            --restart unless-stopped \
            ${REGISTRY}:${SERVICE_PORT}/${IMAGE_NAME}:${BUILD_NUMBER}
        ''')
      }
    }

  }

}
