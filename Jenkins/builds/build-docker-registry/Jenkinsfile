pipeline {

  agent { label 'master' }

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    ansiColor('xterm')
  }

  environment {
    DIRECTORY = 'Jenkins/builds/build-docker-registry'
    REMOTE_TAG = "${BUILD_NUMBER}-${GIT_COMMIT.substring(0, 8)}"
  }

  stages {

    stage('Prepare') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: 'master']],
          userRemoteConfigs: [[credentialsId: 'Git', url: 'git@github.com:docker/distribution-library-image.git']],
          extensions: [
            [$class: 'CleanBeforeCheckout'],
            [$class: 'CloneOption', depth: 0, noTags: true, reference: '', shallow: true],
            [$class: 'RelativeTargetDirectory', relativeTargetDir: 'tmp']
          ]
        ])

        echo 'Overwrite default config files'
        sh '''
          cp -f ${DIRECTORY}/Dockerfile tmp/amd64/
          cp -f ${DIRECTORY}/config-example.yml tmp/amd64/
          cp -f ${DIRECTORY}/Makefile tmp/amd64/
        '''
      }
    }

    stage('Build image') {
      steps {
        dir('tmp/amd64') {
          sh 'make build tag'
        }
      }
    }

    stage('Publish image') {
      steps {
        dir(env.DIRECTORY) {
          sh 'make push'
        }
      }
    }

    stage('Deploy container') {
      steps {
        dir(env.DIRECTORY) {
          sh 'make deploy'
        }
      }
    }

    stage('Test') {
      steps {
        dir(env.DIRECTORY) {
          sh 'make test'
        }
      }
    }

  }

  post {
    always {
      cleanWs()
    }
  }

}
