#!groovy

// Ref: https://gist.github.com/ceilfors/1400fd590632db1f51ca
// Ref: https://stackoverflow.com/questions/32519829/delete-workspace-when-job-is-removed-by-dsl-plugin

import com.cloudbees.hudson.plugins.folder.Folder
import hudson.FilePath
import jenkins.model.Jenkins


@NonCPS
def nodeNames() {
  def nodes = []
    jenkins.model.Jenkins.instance.computers.each { c ->
      nodes.add(c.getNode())
    }
  return nodes
}

def boolean isFolder(String name) {
  def item = Jenkins.instance.getItemByFullName(name)
  return item instanceof Folder
}

def deleteUnusedWorkspace(FilePath root, String path) {
  root.list().each { child ->
    String fullName = path + child.name

    // Don not delete shared libraries
    def matcher = (child.name ==~ /.*@tmp/)

    def item = Jenkins.instance.getItemByFullName(fullName)

    if (isFolder(fullName)) {
      deleteUnusedWorkspace(root.child(child.name), "${fullName}/")
    } else if (item == null && !matcher) {
      println "Deleting (no such job found): '${fullName}'"
      child.deleteRecursive()
    } else if (item instanceof Job && !item.isBuildable()) {
      println "Deleting (job disabled): '${fullName}'"
      child.deleteRecursive()
    }
  }
}

// Loop through all nodes (master & slaves)
for (node in nodeNames()) {
  println "Processing [${node.getDisplayName()}]"
  def workspaceRoot = node.rootPath.child("workspace")
  deleteUnusedWorkspace(workspaceRoot, "")
}
