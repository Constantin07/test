def nodeName        = ''
def git_url         = 'https://github.com/ansible/ansible.git'
def git_hub_project = 'https://github.com/ansible/ansible/'

def current_version = ''
def new_version     = ''

node(nodeName){

    properties([
	buildDiscarder(logRotator(artifactDaysToKeepStr: '', numToKeepStr: '20')),
        pipelineTriggers([githubPush(), pollSCM("TZ=Europe/London\nH H(9-18) * * *")]),
        // Allow only one job at a time
        disableConcurrentBuilds(),
        [$class: 'GithubProjectProperty', displayName: '', projectUrlStr: git_hub_project],
    ])
}

ansiColor('xterm') {

    stage('Checkout') {
	node(nodeName) {
	    checkout scm: [$class: 'GitSCM',
		branches: [[name: '*/devel']],
		userRemoteConfigs: [[url: git_url ]],
		extensions: [[$class: 'CleanCheckout']]
	    ]
	}
    }

    milestone label: 'Checkout'

    stage('Build') {
	node(nodeName) {
	    sh '''
		make clean
		make -j 2 rpm
	    '''

	    current_version = sh(script: "rpm -q ansible | cut -d. -f5", returnStdout: true).trim()
	    new_version = sh(script: "ls rpm-build/ansible*.el7.noarch.rpm | cut -d. -f5", returnStdout: true).trim()
	}
    }

    milestone label: 'Build'

    stage('Approve') {
	if(current_version == new_version) {
	    println "No changes in version"
	    currentBuild.result = 'SUCCESS'
	} else {
	    input(message: "Do you want to install?")
	}
    }

    milestone label: 'Approve'

    stage('Install') {
	node(nodeName) {
	    sh 'sudo yum -y remove ansible'
	    sh 'sudo yum -y install rpm-build/ansible-*.el7.noarch.rpm'
	}
    }
}
