pipeline {

  agent {
    label 'master'
  }

  triggers {
    pollSCM('H H(8-23) * * *')
    upstream(upstreamProjects: 'dockerfiles/tool-box,dockerfiles/vault,dockerfiles/hello-kubernetes,builds/build-docker-registry', threshold: hudson.model.Result.SUCCESS)
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    ansiColor('xterm')
    skipDefaultCheckout()
  }

  environment {
    REGISTRY_HOST = 'centos7.internal:5000'
  }

  stages {

    stage('List images') {
      steps {
        sh '''
          docker pull anoxis/registry-cli
          docker run --rm anoxis/registry-cli -r http://${REGISTRY_HOST}
        '''
      }
    }

    stage('Clean images') {
      steps {
        retry(2) {
          sh '''
            if [ "$(docker ps -aq -f status=running -f name=docker-registry)" ]; then
              docker run --rm --network host anoxis/registry-cli -r http://${REGISTRY_HOST} --delete --num 3 --order-by-date --digest-method=GET
              # Perform garbage collection
              docker exec docker-registry /bin/registry garbage-collect /etc/docker/registry/config.yml --delete-untagged=true
            fi
          '''
        }
      }
    }

  }

}
