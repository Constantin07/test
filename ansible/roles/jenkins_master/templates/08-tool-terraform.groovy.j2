#!groovy

import jenkins.model.*
import com.cloudbees.jenkins.plugins.customtools.CustomTool;
import com.synopsys.arc.jenkinsci.plugins.customtools.versions.ToolVersionConfig;
import hudson.tools.*

String tool_name = 'Terraform'
String tool_version ='0.11.11'
String tool_url ="https://releases.hashicorp.com/terraform/${tool_version}/terraform_${tool_version}_linux_amd64.zip"

def inst = Jenkins.getInstance()
def desc = inst.getExtensionList(com.cloudbees.jenkins.plugins.customtools.CustomTool.DescriptorImpl.class)[0];
def installs = desc.getInstallations()
def customTools = []

if (installs.find { it.name == tool_name }) {
  println "${tool_name} is already installed"
} else {
  println "Installing ${tool_name} ${tool_version}"

  List installers = new ArrayList();
  def tf_installer = new ZipExtractionInstaller(
    '',        // node label to install tool on
    tool_url,  // url
    ''         // subdir
  )
  installers.add(tf_installer)

  List<ToolProperty> properties = new ArrayList<ToolProperty>()
  properties.add(new InstallSourceProperty(installers))

  def newTool = new CustomTool(
    tool_name,         // Name
    '',                // Installation directory (home)
    properties,        // Tool properties
    '',                // Exported paths
    null,              // labelSpecifics
    ToolVersionConfig.DEFAULT,  // toolVersion
    null               // additionalVariables
  )

  customTools.push(newTool)
  desc.setInstallations((com.cloudbees.jenkins.plugins.customtools.CustomTool[])customTools);
  desc.save()
}
