#!groovy

import jenkins.model.Jenkins
import org.jenkinsci.plugins.scriptsecurity.scripts.*

// Clear exisitng entries, if any
ScriptApproval.get().clearApprovedSignatures()

// List of approved script signatures to add (script-security plugin required)
def signatures = [
  'staticMethod jenkins.model.Jenkins getInstance',
  'method hudson.model.AbstractCIBase getNodes',
  'method hudson.model.Computer getNode',
  'method hudson.model.Computer getName',
  'method hudson.model.Node getRootPath',
  'method hudson.model.Node getChannel',
  'method hudson.model.Node getNumExecutors',
  'method jenkins.model.Jenkins getItemByFullName java.lang.String',
  'method jenkins.model.Jenkins getComputers',
  'method hudson.model.ItemGroup getAllItems java.lang.Class',
  'method hudson.model.ItemGroup getItem java.lang.String',
  'method hudson.model.AbstractItem setDescription java.lang.String',
  'method hudson.model.Item getFullName',
  'method hudson.model.Saveable save',
  'method hudson.FilePath getName',
  'method hudson.FilePath list',
  'method hudson.FilePath child java.lang.String',
  'method hudson.FilePath deleteRecursive',
  'method hudson.model.Job isBuildable',
  'staticMethod org.jenkins.plugins.lockableresources.LockableResourcesManager get',
  'method org.jenkins.plugins.lockableresources.LockableResourcesManager getResources',
  'staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods getAt java.util.List java.util.Collection',
  'staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods take java.util.List int'
]

def script_approval = ScriptApproval.get()

for(signature in signatures) {
  script_approval.approveSignature(signature)
}

script_approval.save()

println "Added approved script signatures."
