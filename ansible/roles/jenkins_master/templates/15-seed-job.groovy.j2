#!groovy

import jenkins.model.Jenkins
import hudson.plugins.git.GitSCM
import hudson.plugins.git.BranchSpec
import hudson.plugins.git.UserRemoteConfig
//import hudson.triggers.SCMTrigger
import org.jenkinsci.plugins.workflow.job.WorkflowJob
import org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition

String seedJobName     = 'seed'
String seedJobDesc     = 'This is seed job which creates another job(s).'
String seedJobPath     = 'Jenkins/seed/Jenkinsfile'
String gitUrl          = 'git@github.com:Constantin07/test.git'
String gitBranch       = 'master'
String gitCredentialId = 'Git'

def jenkins = Jenkins.getInstance()

scm = new GitSCM(gitUrl)
scm.branches = [new BranchSpec(gitBranch)]
scm.userRemoteConfigs = [new UserRemoteConfig(gitUrl, null, null, gitCredentialId)]

//gitTrigger = new SCMTrigger('H * * * *')

workflowJob = new WorkflowJob(jenkins, seedJobName)
workflowJob.description = seedJobDesc
//workflowJob.addTrigger(gitTrigger)
workflowJob.definition = new CpsScmFlowDefinition(scm, seedJobPath)
workflowJob.definition.setLightweight(true)

// Don't add the job if already exists
if (jenkins.getItem(seedJobName) == null) {
  println "Job '${seedJobName}' not found, adding ..."
  jenkins.add(workflowJob, workflowJob.name)
}
