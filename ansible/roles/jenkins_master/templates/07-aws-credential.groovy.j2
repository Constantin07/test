#!groovy

import jenkins.model.*
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.impl.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl

def aws_credential = [
  'id':          '{{ id }}',
  'access_key':  '{{ access_key_id }}',
  'secret_key':  '{{ secret_access_key }}',
  'description': '{{ description }}'
]

aws_cred = new AWSCredentialsImpl(
  CredentialsScope.GLOBAL,   // Scope
  aws_credential.id,         // id
  aws_credential.access_key, // accessKey
  aws_credential.secret_key, // secretKey
  aws_credential.description // description
)

jenkins = Jenkins.getInstance()
domain = Domain.global()
store = jenkins.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()

def current_creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
  com.cloudbees.jenkins.plugins.awscredentials.AWSCredentialsImpl.class,
  Jenkins.instance)

def cred = current_creds.findResult { it.id == aws_credential.id ? it : null }

if (cred) {
  println "Found AWS credential with ID '${aws_credential.id}'."
  store.updateCredentials(domain, cred, aws_cred)
  println "Credential ID '${aws_credential.id}' updated."
} else {
  store.addCredentials(domain, aws_cred)
  println "Added AWS credential ID '${aws_credential.id}'."
}

jenkins.save()
