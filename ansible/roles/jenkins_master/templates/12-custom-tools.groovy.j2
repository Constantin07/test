#!groovy

import jenkins.model.*
import com.cloudbees.jenkins.plugins.customtools.CustomTool
import com.synopsys.arc.jenkinsci.plugins.customtools.versions.ToolVersionConfig
import hudson.tools.*

def RemoveTool(desc, name) {
  List<CustomTool> installations = desc.getInstallations().toList()
  List<CustomTool> toRemove = new ArrayList<CustomTool>()
  for (CustomTool tool : installations) {
    if (tool.getName().equals(name)) {
      toRemove.add(tool)
    }
  }
  installations.removeAll(toRemove)
  def customTools = installations as CustomTool[]
  desc.setInstallations(customTools)
  desc.save()
}

def Tools = []
Tools.add(name: 'Terraform', url: 'https://releases.hashicorp.com/terraform/0.12.20/terraform_0.12.20_linux_amd64.zip')
Tools.add(name: 'Packer', url: 'https://releases.hashicorp.com/packer/1.5.1/packer_1.5.1_linux_amd64.zip')

def inst = Jenkins.getInstance()
def desc = inst.getExtensionList(com.cloudbees.jenkins.plugins.customtools.CustomTool.DescriptorImpl.class)[0]
def installs = desc.getInstallations()

Tools.each { t ->
  if (installs.find { it.name == t.name }) {
    println "Found already installed tool ${t.name}, removing..."

    // remove existing custom tools with the same name
    RemoveTool(desc, t.name)
  }
}

installs = desc.getInstallations()
Tools.each { t ->
  // add custom tools
  println "Installing ${t.name}"

  List installers = new ArrayList()
  installers.add(new ZipExtractionInstaller(
    '',      // node label to use custom tool on
    t.url,   // url
    ''       // subdir
  ))

  List<ToolProperty> properties = new ArrayList<ToolProperty>()
  properties.add(new InstallSourceProperty(installers))

  def newTool = new CustomTool(
    t.name,                     // Name
    '',                         // Installation directory (home)
    properties,                 // Tool properties
    '',                         // Exported paths
    null,                       // labelSpecifics
    ToolVersionConfig.DEFAULT,  // toolVersion
    null                        // additionalVariables
  )
  installs += newTool
}

desc.setInstallations((com.cloudbees.jenkins.plugins.customtools.CustomTool[])installs)
desc.save()
