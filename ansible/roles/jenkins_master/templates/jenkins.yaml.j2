credentials:
  system:
    domainCredentials:
    - credentials:
      - x509ClientCert:
          serverCaCertificate: |-
            {{ kubernetes_ca | indent(12, true) | trim }}
          clientCertificate: |-
            {{ kubernetes_client_cert | indent(12, true) | trim }}
          clientKeySecret: |-
            {{ kubernetes_client_key | indent(12, true) | trim }}
          description: "Kubernetes"
          id: "kubernetes"
          scope: GLOBAL

      - vaultAppRoleCredential:
          id: "vault-approle"
          description: "Vault AppRole"
          path: "approle"
          roleId: "{{ vault_role_id }}"
          scope: GLOBAL
          secretId: "{{ vault_secret_id }}"

jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"

  systemMessage: "Jenkins configured via JCasC plugin\n"

  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true

  clouds:
  - kubernetes:
     containerCap: 20
     jenkinsUrl: "{{ jenkins_url }}"
     name: kube-cluster
     namespace: default
     podLabels:
     - key: service
       value: jenkins
     - key: cost
       value: none
     serverUrl: https://kube-cluster.internal:6443
     credentialsId: kubernetes
     templates:
     - containers:
       - name: jnlp
         image: "constantin07/jenkins-agent:3077.vd69cf116da_6f"
         alwaysPullImage: true
         livenessProbe:
           failureThreshold: 0
           initialDelaySeconds: 0
           periodSeconds: 0
           successThreshold: 0
           timeoutSeconds: 0
         privileged: false
         runAsGroup: 1000
         runAsUser: 1000
         resourceRequestCpu: "300m"
         resourceRequestMemory: "512Mi"
         resourceLimitCpu: "1000m"
         resourceLimitMemory: "1Gi"
         ttyEnabled: true
         workingDir: "/home/jenkins/agent"
         envVars:
           - envVar:
               key: "VAULT_ADDR"
               value: "http://vault.internal:8200"
       name: docker
       namespace: default
       label: docker
       idleMinutes: 1
       yamlMergeStrategy: override
       showRawYaml: false

security:
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "noHostKeyVerificationStrategy"

unclassified:
  ansiColorBuildWrapper:
    globalColorMapName: xterm

  globalDefaultFlowDurabilityLevel:
    durabilityHint: PERFORMANCE_OPTIMIZED

  hashicorpVault:
   configuration:
     vaultUrl: "{{ vault_url }}"
     vaultCredentialId: "vault-approle"
     engineVersion: 1
     skipSslVerification: true

groovy:
  - script: >
      println("This is Groovy script!");
