credentials:
  system:
    domainCredentials:
    - credentials:
      - x509ClientCert:
          serverCaCertificate: |-
            {{ kubernetes_ca | indent(12, true) | trim }}
          clientCertificate: |-
            {{ kubernetes_client_cert | indent(12, true) | trim }}
          clientKeySecret: |-
            {{ kubernetes_client_key | indent(12, true) | trim }}
          description: "Kubernetes"
          id: "kubernetes"
          scope: GLOBAL

jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  systemMessage: "Jenkins configured via JCasC plugin\n"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  clouds:
  - kubernetes:
     containerCap: 20
     jenkinsUrl: "{{ jenkins_url }}"
     name: kube-cluster
     namespace: default
     podLabels:
     - key: service
       value: jenkins
     serverUrl: https://kube-cluster.internal:6443
     credentialsId: kubernetes
     waitForPodSec: 300
     templates:
     - containers:
       - name: docker
         image: "jenkins/inbound-agent:4.7-1-alpine"
         alwaysPullImage: true
         livenessProbe:
           failureThreshold: 0
           initialDelaySeconds: 0
           periodSeconds: 0
           successThreshold: 0
           timeoutSeconds: 0
         command: "sleep"
         args: "9999999"
         privileged: true
         runAsGroup: "1000"
         runAsUser: "1000"
         resourceRequestCpu: "500m"
         resourceRequestMemory: "512Mi"
         resourceLimitCpu: "1000m"
         resourceLimitMemory: "1Gi"
         ttyEnabled: true
         workingDir: "/home/jenkins/agent"
       name: docker
       namespace: default
       label: docker
#       nodeUsageMode: NORMAL
       yamlMergeStrategy: override
       showRawYaml: false

unclassified:
  ansiColorBuildWrapper:
    globalColorMapName: xterm
  globalDefaultFlowDurabilityLevel:
    durabilityHint: PERFORMANCE_OPTIMIZED
