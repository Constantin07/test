---

- name: Include Linux distribution specific tasks
  include_tasks: "{{ ansible_os_family | lower }}.yml"
  tags: jenkins_master

- name: Include secrets
  include_vars: secrets.enc.yml
  no_log: True
  tags: jenkins_master

- name: Include distribution specific vars
  include_vars: "{{ ansible_os_family | lower }}.yml"
  tags: jenkins_master

- name: Enable HTTPS
  include_tasks: https.yml
  tags: jenkins_master

- name: Add jenkins user to docker group
  user:
    name: "{{ jenkins_user }}"
    groups: docker
    append: yes
  tags: jenkins_master

- name: Make sure Jenkins is stopped
  service: name=jenkins state=stopped
  tags: jenkins_master

- name: Cleanup init.groovy.d directory
  file:
    state: "{{ item }}"
    path: /var/lib/jenkins/init.groovy.d
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0755
  with_items:
    - absent
    - directory
  tags: jenkins_master

- name: Upload Groovy bootstrap scripts
  template:
    src: "{{ item }}"
    dest: "{{ jenkins_home }}/init.groovy.d/{{ item | basename | regex_replace('.j2','') }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0644
  with_fileglob:
    - ../templates/*.groovy.j2
  notify: restart jenkins
  tags: jenkins_master

- name: Upload list of plugins and install script
  ansible.builtin.copy:
    src: "{{ item.name }}"
    dest: "{{ jenkins_home }}/{{ item.name }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: "{{ item.mode }}"
  loop:
    - { name: 'install-plugins.sh', mode: '0755' }
    - { name: 'plugins.txt', mode: '0644' }
  notify: restart jenkins
  tags: jenkins_master

- name: Upload JCasC file
  template:
    src: jenkins.yaml.j2
    dest: "{{ jenkins_home }}/jenkins.yaml"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0644
  notify: restart jenkins
  no_log: true
  tags: jenkins_master

- name: Cleanup /var/lib/jenkins/plugins directory
  file:
    state: "{{ item }}"
    path: /var/lib/jenkins/plugins
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0755
  with_items:
    - absent
    - directory
  tags: jenkins_master

- name: Install Jenkins plugins
  shell: "{{ jenkins_home }}/install-plugins.sh < {{ jenkins_home }}/plugins.txt"
  environment:
    REF_DIR: "{{ jenkins_home }}/plugins"
    FAILED: "{{ jenkins_home }}/plugins/failed-plugins.txt"
    JENKINS_UC: "https://updates.jenkins.io"
    JENKINS_UC_LATEST: "http://mirrors.jenkins-ci.org"
  become: yes
  become_user: "{{ jenkins_user }}"
  tags: jenkins_master

- name: Install Jenkins systemd unit file
  template:
    src: "{{ ansible_os_family | lower }}-jenkins.service.j2"
    dest: "{{ jenkins_systemd_file }}"
    owner: root
    group: root
    mode: 0644
  notify: restart jenkins
  tags: jenkins_master

- name: Ensure Jenkins service is started and enabled
  systemd:
    name: jenkins.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  tags: jenkins_master
