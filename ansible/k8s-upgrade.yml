---
# Playbook to upgrade Kubernetes cluster, both master & slave nodes

# Usage for interactive mode: ansible-playbook k8s-upgrade.yml -e k8s_version=1.18.8
# Usage for non-interactive mode: ansible-playbook k8s-upgrade.yml -e k8s_version=1.18.8 -e non_interactive=true

- hosts: kube
  become: yes
  become_user: root
  any_errors_fatal: true

  tasks:

    - name: Run apt update
      apt:
        update_cache: yes

    - name: Unhold kubeadm
      command: apt-mark unhold kubeadm

    - name: Upgrade kubeadm to {{ k8s_version }}
      apt:
        name: kubeadm={{ k8s_version }}-00
        update_cache: yes

    - name: Hold kubeadm
      command: apt-mark hold kubeadm

# First upgrade one master
- hosts: master-node1.internal
  become: yes
  become_user: root
  any_errors_fatal: true

  tasks:

    - name: Drain the control plane node
      command: "kubectl drain {{ ansible_fqdn }} --ignore-daemonsets"

    - name: Run kubeadm upgrade plan
      command: kubeadm upgrade plan
      register: plan

    - debug: msg="{{ plan.stdout_lines }}"

    - pause:
        prompt: "Do you want to proceed with upgrade?"
      when: non_interactive is undefined

    - name: Run kubeadm upgrade apply {{ k8s_version }}
      command: kubeadm upgrade apply {{ k8s_version }} --force
      register: apply

    - debug: msg="{{ apply.stdout_lines }}"

    - name: Uncordon the control plane node
      command: "kubectl uncordon {{ ansible_fqdn }}"

# Upgrade other master nodes
- hosts: kube_masters:!master-node1.internal
  serial: 1
  order: sorted
  become: yes
  become_user: root
  any_errors_fatal: true

  tasks:

    - name: Run kubeadm upgrade node
      command: kubeadm upgrade node
      register: upgrade

    - debug: msg="{{ upgrade.stdout_lines }}"

# Upgrade worker nodes
- hosts: kube_slaves
  become: yes
  become_user: root

  tasks:

    - name: Run kubeadm upgrade node
      command: kubeadm upgrade node
      register: upgrade

    - debug: msg="{{ upgrade.stdout_lines }}"

# Upgrade kubelet on allowed nodes
- hosts: kube
  become: yes
  become_user: root
  any_errors_fatal: true

  tasks:

    - name: Unhold kubelet kubectl
      command: apt-mark unhold kubelet kubectl

    - name: Upgrade kubelet kubectl to {{ k8s_version }}
      apt:
        name: "{{ item }}={{ k8s_version }}-00"
        update_cache: yes
      loop:
        - kubelet
        - kubectl

    - name: Hold kubelet kubectl
      command: apt-mark hold kubelet kubectl

    - name: Restart kubelet
      systemd:
        name: kubelet
        state: restarted
        daemon_reload: yes
